CS224Lab No.:1Section No.: 1Name: Atakan AkarBilkent ID: 22203140Date: 09.10.2024Preliminary1).dataquestion1: 	.asciiz "Enter the size of the array:"question2:	.asciiz "Enter the number:"size: 	.word 0	.align 4array:  .space 80			.text 		la $a0,question1	li $v0,4	syscall 		li $v0, 5		syscall	#la $t0, size	sw $v0, size		lw $s0,size 	la $s1, array	addi $s2,$zero,0	beq $zero,$s0,done	loop:		la $a0,question2	li $v0,4	syscall 		li $v0, 5	syscall	sw $v0, 0($s1)	addi $s1,$s1,4		#sw $v0, size		addi $s2,$s2,1	bne $s2,$s0,loop		addi $s1,$s1,-4		la $s2, array loopSecond:	lw $t0, 0($s1)	lw $t1, 0($s2)		sw $t0, 0($s2)	sw $t1, 0($s1)	addi $s2,$s2,4	addi $s1,$s1,-4	ble $s1,$s2, endLoop	j loopSecondendLoop:	lw $s0, size	la $s1, array	printingLoop:	lw $a0, 0($s1)	li $v0, 1	syscall	addi $s1,$s1,4	addi $s0,$s0,-1	bne $s0,$zero,printingLoop	done:	li $v0, 10          	syscallPreliminary2).dataA:	.word 0B:	.word 0C:	.word 0D:	.word 0questionB:	.asciiz "Enter B:\n"questionC: 	.asciiz "Enter C:\n"questionD:	.asciiz "Enter D:\n"		.text	la $a0,questionB	li $v0,4	syscall 	li $v0, 5		syscall	sw $v0, B	la $a0,questionC	li $v0,4	syscall 	li $v0, 5		syscall	sw $v0, C		la $a0,questionD	li $v0,4	syscall 	li $v0, 5		syscall	sw $v0, D		lw $a0,B	lw $a1,C	jal division	move $s0, $v0			lw $a0,D	lw $a1,B	jal mod	move $s1,$v0			add $s2,$s1,$s0		lw $t0,C	sub $s3,$s2,$t0		#s3 parantezin içini içeriyor	lw $t1, B	move $a0,$s3	move $a1,$t1	jal division			move $a0, $v0     	li $v0, 1          	syscall 		li $v0, 10 	syscall			division:	beq $a1,$zero,finish	slt $t0,$a0,$zero #B 0dan küçük mü t0 a at	slt $t1,$a1,$zero #C 0dan küçük mü t1 e at	bne $t0, $zero,convertB		j doNotConvertBconvertB:	sub $a0,$zero,$a0doNotConvertB:	bne $t1, $zero,convertC	j doNotConvertCconvertC:	sub $a1,$zero,$a1doNotConvertC:	addi $v0,$zero,0 #s3 toplam bölüm say›s›n› t›tacakdivideBtoC:   	slt $t2, $a0, $a1         	bne $t2, $0, endLoop      	sub $a0, $a0, $a1        	addi $v0, $v0, 1          	j divideBtoC  	endLoop:		xor $t2,$t1,$t0	bne $t2,$zero,convertBtoCtoNegative	j doNotconvertBtoCtoNegative:	sub $v0,$zero,$v0doNot:	jr $ra					mod:	beq $a1,$zero,finish	slt $t0,$a0,$zero #B 0dan küçük mü t0 a at	slt $t1,$a1,$zero #C 0dan küçük mü t1 e at	bne $t0, $zero,convertBforMod	j doNotConvertBforModconvertBforMod:	sub $a0,$zero,$a0doNotConvertBforMod:	bne $t1, $zero,convertD	j doNotConvertDconvertD:	sub $a1,$zero,$a1doNotConvertD:	subtractToFindMod:	slt $t2, $a0, $a1 	bne $t2, $0, endLoopForMod  	sub $a0, $a0, $a1    	j subtractToFindModendLoopForMod:	addi $t4,$zero,1	beq $t4,$t0,convertModToNegative	j doNotConvertForModconvertModToNegative:	sub $a0,$zero,$a0doNotConvertForMod:	move $v0,$a0	jr $ra		finish:	li $v0, 10 	syscall